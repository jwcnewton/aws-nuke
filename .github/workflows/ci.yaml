name: Golang CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]
  schedule:
  - cron: '15 3 * * 0'

jobs:
  build:
    name: CI Build
    runs-on: ubuntu-22.04
    steps:
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19'
    - name: Setup tools
      run: |
        go install golang.org/x/lint/golint@latest
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Test Project
      run: |
        make test
    - name: Build Project
      run: |
        make

  docker_build:
    runs-on: ubuntu-22.04
    name: Docker Build
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'rebuy-de/aws-nuke' }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Generate image tags
      shell: bash
      run: |
        if [ "${GITHUB_EVENT_NAME}" == "pull_request" ]; then
          echo "##[set-output name=tags;]docker.io/jwcnewton/aws-nuke:${GITHUB_HEAD_REF}"
        else
          echo "##[set-output name=tags;]docker.io/jwcnewton/aws-nuke:main,\
            docker.io/jwcnewton/aws-nuke:latest"
        fi
      id: generate_tags

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: ${{ steps.generate_tags.outputs.tags }}
        platforms: linux/amd64,linux/arm64
